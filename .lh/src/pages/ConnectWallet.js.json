{
    "sourceFile": "src/pages/ConnectWallet.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1734828611830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734828957124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,7 @@\n import React, { useState } from \"react\";\r\n import { BrowserProvider } from \"ethers\"; // Correct import from ethers v6\r\n import { Box, Button, Typography } from \"@mui/material\";\r\n-import WalletLinkIcon from \"./WalletLinkIcon\";\r\n \r\n const ConnectWallet = ({ onAddressChange }) => {\r\n   const [walletAddress, setWalletAddress] = useState(null);\r\n \r\n"
                }
            ],
            "date": 1734828611830,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\nimport { BrowserProvider } from \"ethers\"; // Correct import from ethers v6\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport WalletLinkIcon from \"./WalletLinkIcon\";\r\n\r\nconst ConnectWallet = ({ onAddressChange }) => {\r\n  const [walletAddress, setWalletAddress] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    if (typeof window.ethereum !== \"undefined\") {\r\n      try {\r\n        // Request account access if needed\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n\r\n        // Create an ethers provider\r\n        const provider = new BrowserProvider(window.ethereum); // Use BrowserProvider for newer ethers.js versions\r\n        const signer = await provider.getSigner();\r\n\r\n        // Get the user's Ethereum address\r\n        const address = await signer.getAddress();\r\n        setWalletAddress(address);\r\n\r\n        // Callback to pass address to the parent component\r\n        if (onAddressChange) {\r\n          onAddressChange(address);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error connecting to wallet: \", error);\r\n      }\r\n    } else {\r\n      alert(\"MetaMask is not installed!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n  style={{\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\", // Ensures it spans the container width\r\n  }}\r\n>\r\n  {walletAddress ? (\r\n    <Box sx={{ display: \"flex\", gap: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Typography variant=\"body2\">Wallet Address:</Typography>\r\n      <Typography variant=\"body2\">{walletAddress}</Typography>\r\n    </Box>\r\n  ) : (\r\n    <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Button onClick={connectWallet}>Connect Wallet</Button>\r\n    </Box>\r\n  )}\r\n</Box>\r\n\r\n  );\r\n};\r\n\r\nexport default ConnectWallet;\r\n"
        }
    ]
}